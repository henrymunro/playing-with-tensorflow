{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./guides/constants","loc":{"line":1,"column":49}},{"name":"./guides/guide-mark","loc":{"line":2,"column":22}},{"name":"./mark","loc":{"line":3,"column":22}},{"name":"./marks/marktypes","loc":{"line":4,"column":23}},{"name":"./marks/roles","loc":{"line":5,"column":24}},{"name":"./encode/encode-util","loc":{"line":6,"column":33}},{"name":"../util","loc":{"line":7,"column":18}},{"name":"../transforms","loc":{"line":8,"column":22}},{"name":"vega-util","loc":{"line":9,"column":41}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (spec, scope) {\n  spec = (0, _vegaUtil.isString)(spec) ? { text: spec } : spec;\n\n  var config = scope.config.title,\n      encode = (0, _vegaUtil.extend)({}, spec.encode),\n      datum,\n      dataRef,\n      title;\n\n  // single-element data source for group title\n  datum = {\n    orient: spec.orient != null ? spec.orient : config.orient\n  };\n  dataRef = (0, _util.ref)(scope.add((0, _transforms.Collect)(null, [datum])));\n\n  // build title specification\n  encode.name = spec.name;\n  encode.interactive = spec.interactive;\n  title = buildTitle(spec, config, encode, dataRef);\n  if (spec.zindex) title.zindex = spec.zindex;\n\n  // parse title specification\n  return (0, _mark2.default)(title, scope);\n};\n\nvar _constants = require('./guides/constants');\n\nvar _guideMark = require('./guides/guide-mark');\n\nvar _guideMark2 = _interopRequireDefault(_guideMark);\n\nvar _mark = require('./mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _marktypes = require('./marks/marktypes');\n\nvar _roles = require('./marks/roles');\n\nvar _encodeUtil = require('./encode/encode-util');\n\nvar _util = require('../util');\n\nvar _transforms = require('../transforms');\n\nvar _vegaUtil = require('vega-util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildTitle(spec, config, userEncode, dataRef) {\n  var title = spec.text,\n      orient = spec.orient || config.orient,\n      anchor = spec.anchor || config.anchor,\n      sign = orient === _constants.Left || orient === _constants.Top ? -1 : 1,\n      horizontal = orient === _constants.Top || orient === _constants.Bottom,\n      extent = { group: horizontal ? 'width' : 'height' },\n      encode = {},\n      enter,\n      update,\n      pos,\n      opp,\n      mult,\n      align;\n\n  encode.enter = enter = {\n    opacity: { value: 0 }\n  };\n  (0, _encodeUtil.addEncode)(enter, 'fill', config.color);\n  (0, _encodeUtil.addEncode)(enter, 'font', config.font);\n  (0, _encodeUtil.addEncode)(enter, 'fontSize', config.fontSize);\n  (0, _encodeUtil.addEncode)(enter, 'fontWeight', config.fontWeight);\n\n  encode.exit = {\n    opacity: { value: 0 }\n  };\n\n  encode.update = update = {\n    opacity: { value: 1 },\n    text: (0, _vegaUtil.isObject)(title) ? title : { value: title + '' },\n    offset: (0, _encodeUtil.encoder)((spec.offset != null ? spec.offset : config.offset) || 0)\n  };\n\n  if (anchor === 'start') {\n    mult = 0;\n    align = 'left';\n  } else {\n    if (anchor === 'end') {\n      mult = 1;\n      align = 'right';\n    } else {\n      mult = 0.5;\n      align = 'center';\n    }\n  }\n\n  pos = { field: extent, mult: mult };\n\n  opp = sign < 0 ? { value: 0 } : horizontal ? { field: { group: 'height' } } : { field: { group: 'width' } };\n\n  if (horizontal) {\n    update.x = pos;\n    update.y = opp;\n    update.angle = { value: 0 };\n    update.baseline = { value: orient === _constants.Top ? 'bottom' : 'top' };\n  } else {\n    update.x = opp;\n    update.y = pos;\n    update.angle = { value: sign * 90 };\n    update.baseline = { value: 'bottom' };\n  }\n  update.align = { value: align };\n  update.limit = { field: extent };\n\n  (0, _encodeUtil.addEncode)(update, 'angle', config.angle);\n  (0, _encodeUtil.addEncode)(update, 'baseline', config.baseline);\n  (0, _encodeUtil.addEncode)(update, 'limit', config.limit);\n\n  return (0, _guideMark2.default)(_marktypes.TextMark, _roles.TitleRole, spec.style || _constants.GroupTitleStyle, null, dataRef, encode, userEncode);\n}"},"hash":"2d1262abd43ffd1d5b24829eb8259dff","cacheData":{"env":{}}}