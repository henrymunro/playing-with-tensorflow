{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-scale/package.json","includedInParent":true,"mtime":1517882812000},{"name":"./invertRange","loc":{"line":1,"column":24}},{"name":"./invertRangeExtent","loc":{"line":2,"column":30}},{"name":"./scaleBand","loc":{"line":6,"column":7}},{"name":"./scaleBin","loc":{"line":10,"column":7}},{"name":"./scaleSequential","loc":{"line":11,"column":28}},{"name":"d3-scale","loc":{"line":13,"column":19}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = scale;\n\nvar _invertRange = require('./invertRange');\n\nvar _invertRange2 = _interopRequireDefault(_invertRange);\n\nvar _invertRangeExtent = require('./invertRangeExtent');\n\nvar _invertRangeExtent2 = _interopRequireDefault(_invertRangeExtent);\n\nvar _scaleBand = require('./scaleBand');\n\nvar _scaleBin = require('./scaleBin');\n\nvar _scaleSequential = require('./scaleSequential');\n\nvar _scaleSequential2 = _interopRequireDefault(_scaleSequential);\n\nvar _d3Scale = require('d3-scale');\n\nvar $ = _interopRequireWildcard(_d3Scale);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Augment scales with their type and needed inverse methods.\n */\nfunction create(type, constructor) {\n  return function scale() {\n    var s = constructor();\n\n    if (!s.invertRange) {\n      s.invertRange = s.invert ? (0, _invertRange2.default)(s) : s.invertExtent ? (0, _invertRangeExtent2.default)(s) : undefined;\n    }\n\n    s.type = type;\n    return s;\n  };\n}\n\nfunction scale(type, scale) {\n  if (arguments.length > 1) {\n    scales[type] = create(type, scale);\n    return this;\n  } else {\n    return scales.hasOwnProperty(type) ? scales[type] : undefined;\n  }\n}\n\nvar scales = {\n  // base scale types\n  identity: $.scaleIdentity,\n  linear: $.scaleLinear,\n  log: $.scaleLog,\n  ordinal: $.scaleOrdinal,\n  pow: $.scalePow,\n  sqrt: $.scaleSqrt,\n  quantile: $.scaleQuantile,\n  quantize: $.scaleQuantize,\n  threshold: $.scaleThreshold,\n  time: $.scaleTime,\n  utc: $.scaleUtc,\n\n  // extended scale types\n  band: _scaleBand.band,\n  point: _scaleBand.point,\n  sequential: _scaleSequential2.default,\n  'bin-linear': _scaleBin.binLinear,\n  'bin-ordinal': _scaleBin.binOrdinal\n};\n\nfor (var key in scales) {\n  scale(key, scales[key]);\n}"},"hash":"224dc9133ecad926aff3cfd2aabaf5cd","cacheData":{"env":{}}}