{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-scenegraph/package.json","includedInParent":true,"mtime":1518728314000},{"name":"./util/dom","loc":{"line":1,"column":24}},{"name":"vega-loader","loc":{"line":2,"column":21}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Handler;\n\nvar _dom = require('./util/dom');\n\nvar _vegaLoader = require('vega-loader');\n\nfunction Handler(customLoader) {\n  this._active = null;\n  this._handlers = {};\n  this._loader = customLoader || (0, _vegaLoader.loader)();\n}\n\nvar prototype = Handler.prototype;\n\nprototype.initialize = function (el, origin, obj) {\n  this._el = el;\n  this._obj = obj || null;\n  return this.origin(origin);\n};\n\nprototype.element = function () {\n  return this._el;\n};\n\nprototype.origin = function (origin) {\n  this._origin = origin || [0, 0];\n  return this;\n};\n\nprototype.scene = function (scene) {\n  if (!arguments.length) return this._scene;\n  this._scene = scene;\n  return this;\n};\n\n// add an event handler\n// subclasses should override\nprototype.on = function () /*type, handler*/{};\n\n// remove an event handler\n// subclasses should override\nprototype.off = function () /*type, handler*/{};\n\n// utility method for finding array index of registered handler\n// returns -1 if handler is not registered\nprototype._handlerIndex = function (h, type, handler) {\n  for (var i = h ? h.length : 0; --i >= 0;) {\n    if (h[i].type === type && !handler || h[i].handler === handler) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n// return an array with all registered event handlers\nprototype.handlers = function () {\n  var h = this._handlers,\n      a = [],\n      k;\n  for (k in h) {\n    a.push.apply(a, h[k]);\n  }\n  return a;\n};\n\nprototype.eventName = function (name) {\n  var i = name.indexOf('.');\n  return i < 0 ? name : name.slice(0, i);\n};\n\nprototype.handleHref = function (event, item, href) {\n  this._loader.sanitize(href, { context: 'href' }).then(function (opt) {\n    var e = new MouseEvent(event.type, event),\n        a = (0, _dom.domCreate)(null, 'a');\n    for (var name in opt) a.setAttribute(name, opt[name]);\n    a.dispatchEvent(e);\n  }).catch(function () {/* do nothing */});\n};\n\nprototype.handleTooltip = function (event, item, tooltipText) {\n  this._el.setAttribute('title', tooltipText || '');\n};"},"hash":"14fbfad0e83a336eafe9a16b3502d03e","cacheData":{"env":{}}}