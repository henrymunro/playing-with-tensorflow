{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-scale/package.json","includedInParent":true,"mtime":1517882812000},{"name":"./palettes","loc":{"line":5,"column":7}},{"name":"d3-scale-chromatic","loc":{"line":6,"column":19}},{"name":"d3-interpolate","loc":{"line":7,"column":34}},{"name":"vega-util","loc":{"line":8,"column":19}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (name, scheme) {\n  if (arguments.length > 1) {\n    schemes[name] = scheme;\n    return this;\n  }\n\n  var part = name.split('-');\n  name = part[0];\n  part = +part[1] + 1;\n\n  return part && discrete.hasOwnProperty(name) ? discrete[name][part - 1] : !part && schemes.hasOwnProperty(name) ? schemes[name] : undefined;\n};\n\nvar _palettes = require('./palettes');\n\nvar _d3ScaleChromatic = require('d3-scale-chromatic');\n\nvar _ = _interopRequireWildcard(_d3ScaleChromatic);\n\nvar _d3Interpolate = require('d3-interpolate');\n\nvar _vegaUtil = require('vega-util');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar discrete = {\n  blueorange: _palettes.blueOrange\n};\n\nvar schemes = {\n  // d3 categorical palettes\n  category10: _.schemeCategory10,\n  accent: _.schemeAccent,\n  dark2: _.schemeDark2,\n  paired: _.schemePaired,\n  pastel1: _.schemePastel1,\n  pastel2: _.schemePastel2,\n  set1: _.schemeSet1,\n  set2: _.schemeSet2,\n  set3: _.schemeSet3,\n\n  // additional categorical palettes\n  category20: _palettes.category20,\n  category20b: _palettes.category20b,\n  category20c: _palettes.category20c,\n  tableau10: _palettes.tableau10,\n  tableau20: _palettes.tableau20,\n\n  // sequential multi-hue interpolators\n  viridis: _.interpolateViridis,\n  magma: _.interpolateMagma,\n  inferno: _.interpolateInferno,\n  plasma: _.interpolatePlasma,\n\n  // extended interpolators\n  blueorange: (0, _d3Interpolate.interpolateRgbBasis)((0, _vegaUtil.peek)(_palettes.blueOrange))\n};\n\nfunction add(name, suffix) {\n  schemes[name] = _['interpolate' + suffix];\n  discrete[name] = _['scheme' + suffix];\n}\n\n// sequential single-hue\nadd('blues', 'Blues');\nadd('greens', 'Greens');\nadd('greys', 'Greys');\nadd('purples', 'Purples');\nadd('reds', 'Reds');\nadd('oranges', 'Oranges');\n\n// diverging\nadd('brownbluegreen', 'BrBG');\nadd('purplegreen', 'PRGn');\nadd('pinkyellowgreen', 'PiYG');\nadd('purpleorange', 'PuOr');\nadd('redblue', 'RdBu');\nadd('redgrey', 'RdGy');\nadd('redyellowblue', 'RdYlBu');\nadd('redyellowgreen', 'RdYlGn');\nadd('spectral', 'Spectral');\n\n// sequential multi-hue\nadd('bluegreen', 'BuGn');\nadd('bluepurple', 'BuPu');\nadd('greenblue', 'GnBu');\nadd('orangered', 'OrRd');\nadd('purplebluegreen', 'PuBuGn');\nadd('purpleblue', 'PuBu');\nadd('purplered', 'PuRd');\nadd('redpurple', 'RdPu');\nadd('yellowgreenblue', 'YlGnBu');\nadd('yellowgreen', 'YlGn');\nadd('yelloworangebrown', 'YlOrBr');\nadd('yelloworangered', 'YlOrRd');"},"hash":"982c671035d8ef2c96cb54d9442b466f","cacheData":{"env":{}}}