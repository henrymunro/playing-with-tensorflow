{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"../encode","loc":{"line":1,"column":24}},{"name":"../marks/roles","loc":{"line":2,"column":34}},{"name":"vega-util","loc":{"line":3,"column":47}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encoder = encoder;\nexports.addEncode = addEncode;\nexports.extendEncode = extendEncode;\nexports.encoders = encoders;\nexports.has = has;\n\nvar _encode = require('../encode');\n\nvar _encode2 = _interopRequireDefault(_encode);\n\nvar _roles = require('../marks/roles');\n\nvar _vegaUtil = require('vega-util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction encoder(_) {\n  return (0, _vegaUtil.isObject)(_) ? _ : { value: _ };\n}\n\nfunction addEncode(object, name, value) {\n  if (value != null) {\n    object[name] = (0, _vegaUtil.isObject)(value) && !(0, _vegaUtil.isArray)(value) ? value : { value: value };\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nfunction extendEncode(encode, extra, skip) {\n  for (var name in extra) {\n    if (skip && skip.hasOwnProperty(name)) continue;\n    encode[name] = (0, _vegaUtil.extend)(encode[name] || {}, extra[name]);\n  }\n  return encode;\n}\n\nfunction encoders(encode, type, role, style, scope, params) {\n  var enc, key;\n  params = params || {};\n  params.encoders = { $encode: enc = {} };\n\n  encode = applyDefaults(encode, type, role, style, scope.config);\n\n  for (key in encode) {\n    enc[key] = (0, _encode2.default)(encode[key], type, params, scope);\n  }\n\n  return params;\n}\n\nfunction applyDefaults(encode, type, role, style, config) {\n  var enter = {},\n      key,\n      skip,\n      props;\n\n  // ignore legend and axis\n  if (role == 'legend' || String(role).indexOf('axis') === 0) {\n    role = null;\n  }\n\n  // resolve mark config\n  props = role === _roles.FrameRole ? config.group : role === _roles.MarkRole ? (0, _vegaUtil.extend)({}, config.mark, config[type]) : null;\n\n  for (key in props) {\n    // do not apply defaults if relevant fields are defined\n    skip = has(key, encode) || (key === 'fill' || key === 'stroke') && (has('fill', encode) || has('stroke', encode));\n\n    if (!skip) enter[key] = { value: props[key] };\n  }\n\n  // resolve styles, apply with increasing precedence\n  (0, _vegaUtil.array)(style).forEach(function (name) {\n    var props = config.style && config.style[name];\n    for (var key in props) {\n      if (!has(key, encode)) {\n        enter[key] = { value: props[key] };\n      }\n    }\n  });\n\n  encode = (0, _vegaUtil.extend)({}, encode); // defensive copy\n  encode.enter = (0, _vegaUtil.extend)(enter, encode.enter);\n\n  return encode;\n}\n\nfunction has(key, encode) {\n  return encode && (encode.enter && encode.enter[key] || encode.update && encode.update[key]);\n}"},"hash":"443de4a41a658e099153c3d5962bd928","cacheData":{"env":{}}}