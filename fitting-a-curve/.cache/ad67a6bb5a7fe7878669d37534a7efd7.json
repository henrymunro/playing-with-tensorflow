{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/d3-hierarchy/package.json","includedInParent":true,"mtime":1497037392000},{"name":"./count","loc":{"line":1,"column":23}},{"name":"./each","loc":{"line":2,"column":22}},{"name":"./eachBefore","loc":{"line":3,"column":28}},{"name":"./eachAfter","loc":{"line":4,"column":27}},{"name":"./sum","loc":{"line":5,"column":21}},{"name":"./sort","loc":{"line":6,"column":22}},{"name":"./path","loc":{"line":7,"column":22}},{"name":"./ancestors","loc":{"line":8,"column":27}},{"name":"./descendants","loc":{"line":9,"column":29}},{"name":"./leaves","loc":{"line":10,"column":24}},{"name":"./links","loc":{"line":11,"column":23}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hierarchy;\nexports.computeHeight = computeHeight;\nexports.Node = Node;\n\nvar _count = require(\"./count\");\n\nvar _count2 = _interopRequireDefault(_count);\n\nvar _each = require(\"./each\");\n\nvar _each2 = _interopRequireDefault(_each);\n\nvar _eachBefore = require(\"./eachBefore\");\n\nvar _eachBefore2 = _interopRequireDefault(_eachBefore);\n\nvar _eachAfter = require(\"./eachAfter\");\n\nvar _eachAfter2 = _interopRequireDefault(_eachAfter);\n\nvar _sum = require(\"./sum\");\n\nvar _sum2 = _interopRequireDefault(_sum);\n\nvar _sort = require(\"./sort\");\n\nvar _sort2 = _interopRequireDefault(_sort);\n\nvar _path = require(\"./path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _ancestors = require(\"./ancestors\");\n\nvar _ancestors2 = _interopRequireDefault(_ancestors);\n\nvar _descendants = require(\"./descendants\");\n\nvar _descendants2 = _interopRequireDefault(_descendants);\n\nvar _leaves = require(\"./leaves\");\n\nvar _leaves2 = _interopRequireDefault(_leaves);\n\nvar _links = require(\"./links\");\n\nvar _links2 = _interopRequireDefault(_links);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height; while ((node = node.parent) && node.height < ++height);\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: _count2.default,\n  each: _each2.default,\n  eachAfter: _eachAfter2.default,\n  eachBefore: _eachBefore2.default,\n  sum: _sum2.default,\n  sort: _sort2.default,\n  path: _path2.default,\n  ancestors: _ancestors2.default,\n  descendants: _descendants2.default,\n  leaves: _leaves2.default,\n  links: _links2.default,\n  copy: node_copy\n};"},"hash":"d48c675a8e7ee78d7767e4caee40662a","cacheData":{"env":{}}}