{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./constants","loc":{"line":1,"column":49}},{"name":"./guide-mark","loc":{"line":2,"column":22}},{"name":"../encode/encode-util","loc":{"line":6,"column":24}},{"name":"../marks/marktypes","loc":{"line":4,"column":23}},{"name":"../marks/roles","loc":{"line":5,"column":28}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (spec, config, userEncode, dataRef) {\n  var orient = spec.orient,\n      title = spec.title,\n      sign = orient === _constants.Left || orient === _constants.Top ? -1 : 1,\n      horizontal = orient === _constants.Top || orient === _constants.Bottom,\n      encode = {},\n      enter,\n      update,\n      titlePos;\n\n  encode.enter = enter = {\n    opacity: { value: 0 }\n  };\n  (0, _encodeUtil.addEncode)(enter, 'align', config.titleAlign);\n  (0, _encodeUtil.addEncode)(enter, 'fill', config.titleColor);\n  (0, _encodeUtil.addEncode)(enter, 'font', config.titleFont);\n  (0, _encodeUtil.addEncode)(enter, 'fontSize', config.titleFontSize);\n  (0, _encodeUtil.addEncode)(enter, 'fontWeight', config.titleFontWeight);\n  (0, _encodeUtil.addEncode)(enter, 'limit', config.titleLimit);\n\n  encode.exit = {\n    opacity: { value: 0 }\n  };\n\n  encode.update = update = {\n    opacity: { value: 1 },\n    text: title && title.signal ? { signal: title.signal } : { value: title + '' }\n  };\n\n  titlePos = {\n    scale: spec.scale,\n    range: 0.5\n  };\n\n  if (horizontal) {\n    update.x = titlePos;\n    update.angle = { value: 0 };\n    update.baseline = { value: orient === _constants.Top ? 'bottom' : 'top' };\n  } else {\n    update.y = titlePos;\n    update.angle = { value: sign * 90 };\n    update.baseline = { value: 'bottom' };\n  }\n\n  (0, _encodeUtil.addEncode)(update, 'angle', config.titleAngle);\n  (0, _encodeUtil.addEncode)(update, 'baseline', config.titleBaseline);\n\n  !(0, _encodeUtil.addEncode)(update, 'x', config.titleX) && horizontal && !(0, _encodeUtil.has)('x', userEncode) && (encode.enter.auto = { value: true });\n\n  !(0, _encodeUtil.addEncode)(update, 'y', config.titleY) && !horizontal && !(0, _encodeUtil.has)('y', userEncode) && (encode.enter.auto = { value: true });\n\n  return (0, _guideMark2.default)(_marktypes.TextMark, _roles.AxisTitleRole, _constants.GuideTitleStyle, null, dataRef, encode, userEncode);\n};\n\nvar _constants = require('./constants');\n\nvar _guideMark = require('./guide-mark');\n\nvar _guideMark2 = _interopRequireDefault(_guideMark);\n\nvar _encodeUtil = require('../encode/encode-util');\n\nvar _marktypes = require('../marks/marktypes');\n\nvar _roles = require('../marks/roles');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"},"hash":"dfc894a41e3f5b9b2cee41367149f3c2","cacheData":{"env":{}}}