{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-geo/package.json","includedInParent":true,"mtime":1518585631000},{"name":"./constants","loc":{"line":1,"column":53}},{"name":"vega-dataflow","loc":{"line":2,"column":24}},{"name":"vega-util","loc":{"line":3,"column":39}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = GeoJSON;\n\nvar _constants = require('./constants');\n\nvar _vegaDataflow = require('vega-dataflow');\n\nvar _vegaUtil = require('vega-util');\n\n/**\n * Consolidate an array of [longitude, latitude] points or GeoJSON features\n * into a combined GeoJSON object. This transform is particularly useful for\n * combining geo data for a Projection's fit argument. The resulting GeoJSON\n * data is available as this transform's value. Input pulses are unchanged.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} [params.fields] - A two-element array\n *   of field accessors for the longitude and latitude values.\n * @param {function(object): *} params.geojson - A field accessor for\n *   retrieving GeoJSON feature data.\n */\nfunction GeoJSON(params) {\n  _vegaDataflow.Transform.call(this, null, params);\n}\n\nGeoJSON.Definition = {\n  \"type\": \"GeoJSON\",\n  \"metadata\": {},\n  \"params\": [{ \"name\": \"fields\", \"type\": \"field\", \"array\": true, \"length\": 2 }, { \"name\": \"geojson\", \"type\": \"field\" }]\n};\n\nvar prototype = (0, _vegaUtil.inherits)(GeoJSON, _vegaDataflow.Transform);\n\nprototype.transform = function (_, pulse) {\n  var features = this._features,\n      points = this._points,\n      fields = _.fields,\n      lon = fields && fields[0],\n      lat = fields && fields[1],\n      geojson = _.geojson,\n      flag = pulse.ADD,\n      mod;\n\n  mod = _.modified() || pulse.changed(pulse.REM) || pulse.modified((0, _vegaUtil.accessorFields)(geojson)) || lon && pulse.modified((0, _vegaUtil.accessorFields)(lon)) || lat && pulse.modified((0, _vegaUtil.accessorFields)(lat));\n\n  if (!this.value || mod) {\n    flag = pulse.SOURCE;\n    this._features = features = [];\n    this._points = points = [];\n  }\n\n  if (geojson) {\n    pulse.visit(flag, function (t) {\n      features.push(geojson(t));\n    });\n  }\n\n  if (lon && lat) {\n    pulse.visit(flag, function (t) {\n      var x = lon(t),\n          y = lat(t);\n      if (x != null && y != null && (x = +x) === x && (y = +y) === y) {\n        points.push([x, y]);\n      }\n    });\n    features = features.concat({\n      type: _constants.Feature,\n      geometry: {\n        type: _constants.MultiPoint,\n        coordinates: points\n      }\n    });\n  }\n\n  this.value = {\n    type: _constants.FeatureCollection,\n    features: features\n  };\n};"},"hash":"aa76a744e8aaab30dedf5f78458d6d50","cacheData":{"env":{}}}