{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./constants","loc":{"line":1,"column":70}},{"name":"./guide-mark","loc":{"line":2,"column":22}},{"name":"../marks/marktypes","loc":{"line":3,"column":23}},{"name":"../marks/roles","loc":{"line":4,"column":28}},{"name":"../encode/encode-util","loc":{"line":5,"column":33}},{"name":"../../util","loc":{"line":6,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (spec, config, userEncode, dataRef, size) {\n  var orient = spec.orient,\n      sign = orient === _constants.Left || orient === _constants.Top ? -1 : 1,\n      scale = spec.scale,\n      pad = (0, _util.value)(spec.labelPadding, config.labelPadding),\n      bound = (0, _util.value)(spec.labelBound, config.labelBound),\n      flush = (0, _util.value)(spec.labelFlush, config.labelFlush),\n      flushOn = flush != null && flush !== false && (flush = +flush) === flush,\n      flushOffset = +(0, _util.value)(spec.labelFlushOffset, config.labelFlushOffset),\n      overlap = (0, _util.value)(spec.labelOverlap, config.labelOverlap),\n      zero = { value: 0 },\n      encode = {},\n      enter,\n      exit,\n      update,\n      tickSize,\n      tickPos;\n\n  encode.enter = enter = {\n    opacity: zero\n  };\n  (0, _encodeUtil.addEncode)(enter, 'angle', config.labelAngle);\n  (0, _encodeUtil.addEncode)(enter, 'fill', config.labelColor);\n  (0, _encodeUtil.addEncode)(enter, 'font', config.labelFont);\n  (0, _encodeUtil.addEncode)(enter, 'fontSize', config.labelFontSize);\n  (0, _encodeUtil.addEncode)(enter, 'fontWeight', config.labelFontWeight);\n  (0, _encodeUtil.addEncode)(enter, 'limit', config.labelLimit);\n\n  encode.exit = exit = {\n    opacity: zero\n  };\n\n  encode.update = update = {\n    opacity: { value: 1 },\n    text: { field: _constants.Label }\n  };\n\n  tickSize = (0, _encodeUtil.encoder)(size);\n  tickSize.mult = sign;\n  tickSize.offset = (0, _encodeUtil.encoder)(pad);\n  tickSize.offset.mult = sign;\n\n  tickPos = {\n    scale: scale,\n    field: _constants.Value,\n    band: 0.5,\n    offset: config.tickOffset\n  };\n\n  if (orient === _constants.Top || orient === _constants.Bottom) {\n    update.y = enter.y = tickSize;\n    update.x = enter.x = exit.x = tickPos;\n    (0, _encodeUtil.addEncode)(update, 'align', flushOn ? flushExpr(scale, flush, '\"left\"', '\"right\"', '\"center\"') : 'center');\n    if (flushOn && flushOffset) {\n      (0, _encodeUtil.addEncode)(update, 'dx', flushExpr(scale, flush, -flushOffset, flushOffset, 0));\n    }\n\n    (0, _encodeUtil.addEncode)(update, 'baseline', orient === _constants.Top ? 'bottom' : 'top');\n  } else {\n    update.x = enter.x = tickSize;\n    update.y = enter.y = exit.y = tickPos;\n    (0, _encodeUtil.addEncode)(update, 'align', orient === _constants.Right ? 'left' : 'right');\n    (0, _encodeUtil.addEncode)(update, 'baseline', flushOn ? flushExpr(scale, flush, '\"bottom\"', '\"top\"', '\"middle\"') : 'middle');\n    if (flushOn && flushOffset) {\n      (0, _encodeUtil.addEncode)(update, 'dy', flushExpr(scale, flush, flushOffset, -flushOffset, 0));\n    }\n  }\n\n  spec = (0, _guideMark2.default)(_marktypes.TextMark, _roles.AxisLabelRole, _constants.GuideLabelStyle, _constants.Value, dataRef, encode, userEncode);\n  if (overlap || bound) {\n    spec.overlap = {\n      method: overlap,\n      order: 'datum.index',\n      bound: bound ? { scale: scale, orient: orient, tolerance: +bound } : null\n    };\n  }\n  return spec;\n};\n\nvar _constants = require('./constants');\n\nvar _guideMark = require('./guide-mark');\n\nvar _guideMark2 = _interopRequireDefault(_guideMark);\n\nvar _marktypes = require('../marks/marktypes');\n\nvar _roles = require('../marks/roles');\n\nvar _encodeUtil = require('../encode/encode-util');\n\nvar _util = require('../../util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction flushExpr(scale, threshold, a, b, c) {\n  return {\n    signal: 'flush(range(\"' + scale + '\"), ' + 'scale(\"' + scale + '\", datum.value), ' + threshold + ',' + a + ',' + b + ',' + c + ')'\n  };\n}"},"hash":"76cfb5490cfc83509b29d83b901f98ee","cacheData":{"env":{}}}