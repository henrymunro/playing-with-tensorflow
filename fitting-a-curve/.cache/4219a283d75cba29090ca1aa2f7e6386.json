{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-transforms/package.json","includedInParent":true,"mtime":1520278057000},{"name":"./util/SortedList","loc":{"line":1,"column":23}},{"name":"vega-dataflow","loc":{"line":2,"column":33}},{"name":"vega-util","loc":{"line":3,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Collect;\n\nvar _SortedList = require('./util/SortedList');\n\nvar _SortedList2 = _interopRequireDefault(_SortedList);\n\nvar _vegaDataflow = require('vega-dataflow');\n\nvar _vegaUtil = require('vega-util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Collects all data tuples that pass through this operator.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(*,*): number} [params.sort] - An optional\n *   comparator function for additionally sorting the collected tuples.\n */\nfunction Collect(params) {\n  _vegaDataflow.Transform.call(this, [], params);\n}\n\nCollect.Definition = {\n  \"type\": \"Collect\",\n  \"metadata\": { \"source\": true },\n  \"params\": [{ \"name\": \"sort\", \"type\": \"compare\" }]\n};\n\nvar prototype = (0, _vegaUtil.inherits)(Collect, _vegaDataflow.Transform);\n\nprototype.transform = function (_, pulse) {\n  var out = pulse.fork(pulse.ALL),\n      list = (0, _SortedList2.default)(_vegaDataflow.tupleid, this.value, out.materialize(out.ADD).add),\n      sort = _.sort,\n      mod = pulse.changed() || sort && (_.modified('sort') || pulse.modified(sort.fields));\n\n  out.visit(out.REM, list.remove);\n\n  this.modified(mod);\n  this.value = out.source = list.data(sort, mod);\n\n  // propagate tree root if defined\n  if (pulse.source && pulse.source.root) {\n    this.value.root = pulse.source.root;\n  }\n\n  return out;\n};"},"hash":"cbbe3ad31e376d93fcb26ae5f26fcfa5","cacheData":{"env":{}}}