{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./ast","loc":{"line":1,"column":34}},{"name":"./prefixes","loc":{"line":2,"column":26}},{"name":"vega-scale","loc":{"line":3,"column":24}},{"name":"vega-util","loc":{"line":4,"column":44}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScale = getScale;\nexports.scaleVisitor = scaleVisitor;\nexports.range = range;\nexports.domain = domain;\nexports.bandwidth = bandwidth;\nexports.bandspace = bandspace;\nexports.copy = copy;\nexports.scale = scale;\nexports.invert = invert;\n\nvar _ast = require('./ast');\n\nvar _prefixes = require('./prefixes');\n\nvar _vegaScale = require('vega-scale');\n\nvar _vegaUtil = require('vega-util');\n\nfunction getScale(name, ctx) {\n  var s;\n  return (0, _vegaUtil.isFunction)(name) ? name : (0, _vegaUtil.isString)(name) ? (s = ctx.scales[name]) && s.value : undefined;\n}\n\nfunction addScaleDependency(scope, params, name) {\n  var scaleName = _prefixes.scalePrefix + name;\n  if (!params.hasOwnProperty(scaleName)) {\n    try {\n      params[scaleName] = scope.scaleRef(name);\n    } catch (err) {\n      // TODO: error handling? warning?\n    }\n  }\n}\n\nfunction scaleVisitor(name, args, scope, params) {\n  if (args[0].type === _ast.Literal) {\n    // add scale dependency\n    addScaleDependency(scope, params, args[0].value);\n  } else if (args[0].type === _ast.Identifier) {\n    // indirect scale lookup; add all scales as parameters\n    for (name in scope.scales) {\n      addScaleDependency(scope, params, name);\n    }\n  }\n}\n\nfunction range(name, group) {\n  var s = getScale(name, (group || this).context);\n  return s && s.range ? s.range() : [];\n}\n\nfunction domain(name, group) {\n  var s = getScale(name, (group || this).context);\n  return s ? s.domain() : [];\n}\n\nfunction bandwidth(name, group) {\n  var s = getScale(name, (group || this).context);\n  return s && s.bandwidth ? s.bandwidth() : 0;\n}\n\nfunction bandspace(count, paddingInner, paddingOuter) {\n  return (0, _vegaScale.bandSpace)(count || 0, paddingInner || 0, paddingOuter || 0);\n}\n\nfunction copy(name, group) {\n  var s = getScale(name, (group || this).context);\n  return s ? s.copy() : undefined;\n}\n\nfunction scale(name, value, group) {\n  var s = getScale(name, (group || this).context);\n  return s ? s(value) : undefined;\n}\n\nfunction invert(name, range, group) {\n  var s = getScale(name, (group || this).context);\n  return !s ? undefined : (0, _vegaUtil.isArray)(range) ? (s.invertRange || s.invert)(range) : (s.invert || s.invertExtent)(range);\n}"},"hash":"ecaeb3127526b1cf1a84ded926a7d0dc","cacheData":{"env":{}}}