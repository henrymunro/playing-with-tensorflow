{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-runtime/package.json","includedInParent":true,"mtime":1508906165000},{"name":"./expression","loc":{"line":1,"column":33}},{"name":"./parameters","loc":{"line":2,"column":28}},{"name":"./util","loc":{"line":3,"column":25}},{"name":"vega-util","loc":{"line":4,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (spec, ctx) {\n  if ((0, _util.isOperator)(spec.type) || !spec.type) {\n    ctx.operator(spec, spec.update ? (0, _expression.operatorExpression)(spec.update, ctx) : null);\n  } else {\n    ctx.transform(spec, spec.type);\n  }\n};\n\nexports.parseOperatorParameters = parseOperatorParameters;\n\nvar _expression = require('./expression');\n\nvar _parameters = require('./parameters');\n\nvar _parameters2 = _interopRequireDefault(_parameters);\n\nvar _util = require('./util');\n\nvar _vegaUtil = require('vega-util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Parse and assign operator parameters.\n */\nfunction parseOperatorParameters(spec, ctx) {\n  var op, params;\n  if (spec.params) {\n    if (!(op = ctx.get(spec.id))) {\n      (0, _vegaUtil.error)('Invalid operator id: ' + spec.id);\n    }\n    params = (0, _parameters2.default)(spec.params, ctx);\n    ctx.dataflow.connect(op, op.parameters(params));\n  }\n}\n\n/**\n * Parse a dataflow operator.\n */"},"hash":"340ae327eb215c968e233d4c9134c4d2","cacheData":{"env":{}}}