{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-statistics/package.json","includedInParent":true,"mtime":1506579124000},{"name":"./normal","loc":{"line":1,"column":21}},{"name":"./quartiles","loc":{"line":2,"column":22}},{"name":"./random","loc":{"line":3,"column":21}},{"name":"d3-array","loc":{"line":4,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (support, bandwidth) {\n  var kernel = (0, _normal2.default)(),\n      dist = {},\n      n = 0;\n\n  dist.data = function (_) {\n    if (arguments.length) {\n      support = _;\n      n = _ ? _.length : 0;\n      return dist.bandwidth(bandwidth);\n    } else {\n      return support;\n    }\n  };\n\n  dist.bandwidth = function (_) {\n    if (!arguments.length) return bandwidth;\n    bandwidth = _;\n    if (!bandwidth && support) bandwidth = estimateBandwidth(support);\n    return dist;\n  };\n\n  dist.sample = function () {\n    return support[~~((0, _random.random)() * n)] + bandwidth * kernel.sample();\n  };\n\n  dist.pdf = function (x) {\n    for (var y = 0, i = 0; i < n; ++i) {\n      y += kernel.pdf((x - support[i]) / bandwidth);\n    }\n    return y / bandwidth / n;\n  };\n\n  dist.cdf = function (x) {\n    for (var y = 0, i = 0; i < n; ++i) {\n      y += kernel.cdf((x - support[i]) / bandwidth);\n    }\n    return y / n;\n  };\n\n  dist.icdf = function () {\n    throw Error('KDE icdf not supported.');\n  };\n\n  return dist.data(support);\n};\n\nvar _normal = require('./normal');\n\nvar _normal2 = _interopRequireDefault(_normal);\n\nvar _quartiles = require('./quartiles');\n\nvar _quartiles2 = _interopRequireDefault(_quartiles);\n\nvar _random = require('./random');\n\nvar _d3Array = require('d3-array');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Scott, D. W. (1992) Multivariate Density Estimation:\n// Theory, Practice, and Visualization. Wiley.\nfunction estimateBandwidth(array) {\n  var n = array.length,\n      q = (0, _quartiles2.default)(array),\n      h = (q[2] - q[0]) / 1.34;\n  return 1.06 * Math.min(Math.sqrt((0, _d3Array.variance)(array)), h) * Math.pow(n, -0.2);\n}\n\n// TODO: support for additional kernels?"},"hash":"2eaf50a527c75f009edcbb1d5b710974","cacheData":{"env":{}}}