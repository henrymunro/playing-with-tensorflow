{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-dataflow/package.json","includedInParent":true,"mtime":1518291445000},{"name":"vega-loader","loc":{"line":1,"column":19}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ingest = ingest;\nexports.request = request;\n\nvar _vegaLoader = require('vega-loader');\n\nfunction ingest(target, data, format) {\n  return this.pulse(target, this.changeset().insert((0, _vegaLoader.read)(data, format)));\n}\n\nfunction loadPending(df) {\n  var accept,\n      reject,\n      pending = new Promise(function (a, r) {\n    accept = a;\n    reject = r;\n  });\n\n  pending.requests = 0;\n\n  pending.done = function () {\n    if (--pending.requests === 0) {\n      df.runAfter(function () {\n        df._pending = null;\n        try {\n          df.run();\n          accept(df);\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n  };\n\n  return df._pending = pending;\n}\n\nfunction request(target, url, format) {\n  var df = this,\n      pending = df._pending || loadPending(df);\n\n  pending.requests += 1;\n\n  df.loader().load(url, { context: 'dataflow' }).then(function (data) {\n    df.ingest(target, data, format);\n  }, function (error) {\n    df.error('Loading failed', url, error);\n  }).catch(function (error) {\n    df.error('Data ingestion failed', url, error);\n  }).then(pending.done, pending.done);\n}"},"hash":"ced8bdfd3175542fe2c675e954c0852b","cacheData":{"env":{}}}