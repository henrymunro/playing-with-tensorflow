{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-embed/package.json","includedInParent":true,"mtime":1520897846000},{"name":"compare-versions","loc":{"line":11,"column":29}},{"name":"d3-selection","loc":{"line":12,"column":17}},{"name":"vega-lib","loc":{"line":13,"column":25}},{"name":"vega-lite","loc":{"line":14,"column":23}},{"name":"vega-schema-url-parser","loc":{"line":15,"column":39}},{"name":"./post","loc":{"line":16,"column":21}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar versionCompare = require(\"compare-versions\");\nvar d3 = require(\"d3-selection\");\nvar vegaImport = require(\"vega-lib\");\nvar VegaLite = require(\"vega-lite\");\nvar vega_schema_url_parser_1 = require(\"vega-schema-url-parser\");\nvar post_1 = require(\"./post\");\nexports.vega = vegaImport;\nexports.vl = VegaLite;\nvar NAMES = {\n    'vega': 'Vega',\n    'vega-lite': 'Vega-Lite',\n};\nvar VERSION = {\n    'vega': exports.vega.version,\n    'vega-lite': exports.vl ? exports.vl.version : 'not available',\n};\nvar PREPROCESSOR = {\n    'vega': function (vgjson, _) { return vgjson; },\n    'vega-lite': function (vljson, config) { return exports.vl.compile(vljson, { config: config }).spec; },\n};\n/**\n * Embed a Vega visualization component in a web page. This function returns a promise.\n *\n * @param el        DOM element in which to place component (DOM node or CSS selector).\n * @param spec      String : A URL string from which to load the Vega specification.\n *                  Object : The Vega/Vega-Lite specification as a parsed JSON object.\n * @param opt       A JavaScript object containing options for embedding.\n */\nfunction embed(el, spec, opt) {\n    try {\n        opt = opt || {};\n        var actions = opt.actions !== undefined ? opt.actions : true;\n        var loader = opt.loader || exports.vega.loader();\n        var renderer = opt.renderer || 'canvas';\n        var logLevel = opt.logLevel || exports.vega.Warn;\n        // Load the visualization specification.\n        if (exports.vega.isString(spec)) {\n            return loader.load(spec).then(function (data) { return embed(el, JSON.parse(data), opt); }).catch(Promise.reject);\n        }\n        // Load Vega theme/configuration.\n        var config = opt.config;\n        if (exports.vega.isString(config)) {\n            return loader.load(config).then(function (data) { return embed(el, spec, __assign({}, opt, { config: JSON.parse(data) })); }).catch(Promise.reject);\n        }\n        // Decide mode\n        var parsed = void 0;\n        var mode_1;\n        if (spec.$schema) {\n            parsed = vega_schema_url_parser_1.default(spec.$schema);\n            if (opt.mode && opt.mode !== parsed.library) {\n                console.warn(\"The given visualization spec is written in \" + NAMES[parsed.library] + \", but mode argument sets \" + NAMES[opt.mode] + \".\");\n            }\n            mode_1 = parsed.library;\n            if (versionCompare(parsed.version, VERSION[mode_1]) > 0) {\n                console.warn(\"The input spec uses \" + mode_1 + \" \" + parsed.version + \", but the current version of \" + NAMES[mode_1] + \" is \" + VERSION[mode_1] + \".\");\n            }\n        }\n        else {\n            mode_1 = opt.mode || 'vega';\n        }\n        var vgSpec = PREPROCESSOR[mode_1](spec, config);\n        if (mode_1 === 'vega-lite') {\n            if (vgSpec.$schema) {\n                parsed = vega_schema_url_parser_1.default(vgSpec.$schema);\n                if (versionCompare(parsed.version, VERSION.vega) > 0) {\n                    console.warn(\"The compiled spec uses Vega \" + parsed.version + \", but current version is \" + VERSION.vega + \".\");\n                }\n            }\n        }\n        // ensure container div has class 'vega-embed'\n        var div = d3.select(el) // d3.select supports elements and strings\n            .classed('vega-embed', true)\n            .html(''); // clear container\n        if (opt.onBeforeParse) {\n            // Allow Vega spec to be modified before being used\n            vgSpec = opt.onBeforeParse(vgSpec);\n        }\n        // Do not apply the config to Vega when we have already applied it to Vega-Lite.\n        // This call may throw an Error if parsing fails.\n        var runtime = exports.vega.parse(vgSpec, mode_1 === 'vega-lite' ? {} : config);\n        var view_1 = new exports.vega.View(runtime, { loader: loader, logLevel: logLevel, renderer: renderer })\n            .initialize(el);\n        // Vega-Lite does not need hover so we can improve perf by not activating it\n        if (mode_1 !== 'vega-lite') {\n            view_1.hover();\n        }\n        if (opt) {\n            if (opt.width) {\n                view_1.width(opt.width);\n            }\n            if (opt.height) {\n                view_1.height(opt.height);\n            }\n            if (opt.padding) {\n                view_1.padding(opt.padding);\n            }\n        }\n        view_1.run();\n        if (actions !== false) {\n            // add child div to house action links\n            var ctrl = div.append('div')\n                .attr('class', 'vega-actions');\n            // add 'Export' action\n            if (actions === true || actions.export !== false) {\n                var ext_1 = renderer === 'canvas' ? 'png' : 'svg';\n                ctrl.append('a')\n                    .text(\"Export as \" + ext_1.toUpperCase())\n                    .attr('href', '#')\n                    .attr('target', '_blank')\n                    .attr('download', \"visualization.\" + ext_1)\n                    .on('mousedown', function () {\n                    var _this = this;\n                    view_1.toImageURL(ext_1).then(function (url) {\n                        _this.href = url;\n                    }).catch(function (error) { throw error; });\n                    d3.event.preventDefault();\n                });\n            }\n            // add 'View Source' action\n            if (actions === true || actions.source !== false) {\n                ctrl.append('a')\n                    .text('View Source')\n                    .attr('href', '#')\n                    .on('click', function () {\n                    viewSource(JSON.stringify(spec, null, 2), opt.sourceHeader || '', opt.sourceFooter || '');\n                    d3.event.preventDefault();\n                });\n            }\n            // add 'Open in Vega Editor' action\n            if (actions === true || actions.editor !== false) {\n                var editorUrl_1 = opt.editorUrl || 'https://vega.github.io/editor/';\n                ctrl.append('a')\n                    .text('Open in Vega Editor')\n                    .attr('href', '#')\n                    .on('click', function () {\n                    post_1.post(window, editorUrl_1, {\n                        mode: mode_1,\n                        spec: JSON.stringify(spec, null, 2),\n                    });\n                    d3.event.preventDefault();\n                });\n            }\n        }\n        return Promise.resolve({ view: view_1, spec: spec });\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\nexports.default = embed;\nfunction viewSource(source, sourceHeader, sourceFooter) {\n    var header = \"<html><head>\" + sourceHeader + \"</head><body><pre><code class=\\\"json\\\">\";\n    var footer = \"</code></pre>\" + sourceFooter + \"</body></html>\";\n    var win = window.open('');\n    win.document.write(header + source + footer);\n    win.document.title = 'Vega JSON Source';\n}\n//# sourceMappingURL=data:application/json;base64,"},"hash":"e9234dcfe046eca8020dde653102ed85","cacheData":{"env":{}}}