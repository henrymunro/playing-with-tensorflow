{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./expression","loc":{"line":1,"column":28}},{"name":"./stream","loc":{"line":2,"column":24}},{"name":"vega-event-selector","loc":{"line":3,"column":23}},{"name":"vega-util","loc":{"line":4,"column":58}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (spec, scope, target) {\n  var events = spec.events,\n      update = spec.update,\n      encode = spec.encode,\n      sources = [],\n      value = '',\n      entry;\n\n  if (!events) {\n    (0, _vegaUtil.error)('Signal update missing events specification.');\n  }\n\n  // interpret as an event selector string\n  if ((0, _vegaUtil.isString)(events)) {\n    events = (0, _vegaEventSelector.selector)(events);\n  }\n\n  // separate event streams from signal updates\n  events = (0, _vegaUtil.array)(events).filter(function (stream) {\n    if (stream.signal || stream.scale) {\n      sources.push(stream);\n      return 0;\n    } else {\n      return 1;\n    }\n  });\n\n  // merge event streams, include as source\n  if (events.length) {\n    sources.push(events.length > 1 ? { merge: events } : events[0]);\n  }\n\n  if (encode != null) {\n    if (update) (0, _vegaUtil.error)('Signal encode and update are mutually exclusive.');\n    update = 'encode(item(),' + (0, _vegaUtil.stringValue)(encode) + ')';\n  }\n\n  // resolve update value\n  value = (0, _vegaUtil.isString)(update) ? (0, _expression2.default)(update, scope, preamble) : update.expr != null ? (0, _expression2.default)(update.expr, scope, preamble) : update.value != null ? update.value : update.signal != null ? {\n    $expr: '_.value',\n    $params: { value: scope.signalRef(update.signal) }\n  } : (0, _vegaUtil.error)('Invalid signal update specification.');\n\n  entry = {\n    target: target,\n    update: value\n  };\n\n  if (spec.force) {\n    entry.options = { force: true };\n  }\n\n  sources.forEach(function (source) {\n    source = { source: (0, _stream2.default)(source, scope) };\n    scope.addUpdate((0, _vegaUtil.extend)(source, entry));\n  });\n};\n\nvar _expression = require('./expression');\n\nvar _expression2 = _interopRequireDefault(_expression);\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _vegaEventSelector = require('vega-event-selector');\n\nvar _vegaUtil = require('vega-util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar preamble = 'var datum=event.item&&event.item.datum;';"},"hash":"d6e02bfa666af9b81359566c24846df2","cacheData":{"env":{}}}