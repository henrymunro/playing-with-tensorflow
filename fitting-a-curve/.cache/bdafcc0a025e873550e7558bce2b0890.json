{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-scenegraph/package.json","includedInParent":true,"mtime":1518728314000},{"name":"d3-shape","loc":{"line":20,"column":7}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = curves;\n\nvar _d3Shape = require('d3-shape');\n\nvar lookup = {\n  'basis': {\n    curve: _d3Shape.curveBasis\n  },\n  'basis-closed': {\n    curve: _d3Shape.curveBasisClosed\n  },\n  'basis-open': {\n    curve: _d3Shape.curveBasisOpen\n  },\n  'bundle': {\n    curve: _d3Shape.curveBundle,\n    tension: 'beta',\n    value: 0.85\n  },\n  'cardinal': {\n    curve: _d3Shape.curveCardinal,\n    tension: 'tension',\n    value: 0\n  },\n  'cardinal-open': {\n    curve: _d3Shape.curveCardinalOpen,\n    tension: 'tension',\n    value: 0\n  },\n  'cardinal-closed': {\n    curve: _d3Shape.curveCardinalClosed,\n    tension: 'tension',\n    value: 0\n  },\n  'catmull-rom': {\n    curve: _d3Shape.curveCatmullRom,\n    tension: 'alpha',\n    value: 0.5\n  },\n  'catmull-rom-closed': {\n    curve: _d3Shape.curveCatmullRomClosed,\n    tension: 'alpha',\n    value: 0.5\n  },\n  'catmull-rom-open': {\n    curve: _d3Shape.curveCatmullRomOpen,\n    tension: 'alpha',\n    value: 0.5\n  },\n  'linear': {\n    curve: _d3Shape.curveLinear\n  },\n  'linear-closed': {\n    curve: _d3Shape.curveLinearClosed\n  },\n  'monotone': {\n    horizontal: _d3Shape.curveMonotoneY,\n    vertical: _d3Shape.curveMonotoneX\n  },\n  'natural': {\n    curve: _d3Shape.curveNatural\n  },\n  'step': {\n    curve: _d3Shape.curveStep\n  },\n  'step-after': {\n    curve: _d3Shape.curveStepAfter\n  },\n  'step-before': {\n    curve: _d3Shape.curveStepBefore\n  }\n};\n\nfunction curves(type, orientation, tension) {\n  var entry = lookup.hasOwnProperty(type) && lookup[type],\n      curve = null;\n\n  if (entry) {\n    curve = entry.curve || entry[orientation || 'vertical'];\n    if (entry.tension && tension != null) {\n      curve = curve[entry.tension](tension);\n    }\n  }\n\n  return curve;\n}"},"hash":"f4a0b5930ee5a12de03b60543516b37e","cacheData":{"env":{}}}