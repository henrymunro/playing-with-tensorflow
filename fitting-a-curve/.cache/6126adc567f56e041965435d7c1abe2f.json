{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./scale","loc":{"line":1,"column":23}},{"name":"vega-scenegraph","loc":{"line":2,"column":23}},{"name":"vega-scale","loc":{"line":3,"column":28}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (scale, p0, p1, count, group) {\n  scale = (0, _scale.getScale)(scale, (group || this).context);\n\n  var gradient = (0, _vegaScenegraph.Gradient)(p0, p1),\n      stops = scale.domain(),\n      min = stops[0],\n      max = stops[stops.length - 1],\n      fraction = (0, _vegaScale.scaleFraction)(scale, min, max);\n\n  if (scale.ticks) {\n    stops = scale.ticks(+count || 15);\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== stops[stops.length - 1]) stops.push(max);\n  }\n\n  for (var i = 0, n = stops.length; i < n; ++i) {\n    gradient.stop(fraction(stops[i]), scale(stops[i]));\n  }\n\n  return gradient;\n};\n\nvar _scale = require('./scale');\n\nvar _vegaScenegraph = require('vega-scenegraph');\n\nvar _vegaScale = require('vega-scale');"},"hash":"81d0b97dc26d228cbbd5e9b39b67d6ce","cacheData":{"env":{}}}