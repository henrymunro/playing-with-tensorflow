{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./autosize","loc":{"line":1,"column":26}},{"name":"./padding","loc":{"line":2,"column":25}},{"name":"./signal","loc":{"line":3,"column":24}},{"name":"./spec","loc":{"line":4,"column":22}},{"name":"./encode/encode-util","loc":{"line":5,"column":37}},{"name":"./marks/marktypes","loc":{"line":6,"column":24}},{"name":"./marks/roles","loc":{"line":7,"column":24}},{"name":"../util","loc":{"line":8,"column":28}},{"name":"../DataScope","loc":{"line":9,"column":22}},{"name":"../transforms","loc":{"line":10,"column":64}},{"name":"vega-util","loc":{"line":11,"column":27}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseView;\n\nvar _autosize = require('./autosize');\n\nvar _autosize2 = _interopRequireDefault(_autosize);\n\nvar _padding = require('./padding');\n\nvar _padding2 = _interopRequireDefault(_padding);\n\nvar _signal = require('./signal');\n\nvar _signal2 = _interopRequireDefault(_signal);\n\nvar _spec = require('./spec');\n\nvar _spec2 = _interopRequireDefault(_spec);\n\nvar _encodeUtil = require('./encode/encode-util');\n\nvar _marktypes = require('./marks/marktypes');\n\nvar _roles = require('./marks/roles');\n\nvar _util = require('../util');\n\nvar _DataScope = require('../DataScope');\n\nvar _DataScope2 = _interopRequireDefault(_DataScope);\n\nvar _transforms = require('../transforms');\n\nvar _vegaUtil = require('vega-util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defined = (0, _vegaUtil.toSet)(['width', 'height', 'padding', 'autosize']);\n\nfunction parseView(spec, scope) {\n  var config = scope.config,\n      op,\n      input,\n      encode,\n      parent,\n      root;\n\n  scope.background = spec.background || config.background;\n  scope.eventConfig = config.events;\n  root = (0, _util.ref)(scope.root = scope.add((0, _util.operator)()));\n  scope.addSignal('width', spec.width || 0);\n  scope.addSignal('height', spec.height || 0);\n  scope.addSignal('padding', (0, _padding2.default)(spec.padding, config));\n  scope.addSignal('autosize', (0, _autosize2.default)(spec.autosize, config));\n\n  (0, _vegaUtil.array)(spec.signals).forEach(function (_) {\n    if (!defined[_.name]) (0, _signal2.default)(_, scope);\n  });\n\n  // Store root group item\n  input = scope.add((0, _transforms.Collect)());\n\n  // Encode root group item\n  encode = (0, _encodeUtil.extendEncode)({\n    enter: { x: { value: 0 }, y: { value: 0 } },\n    update: { width: { signal: 'width' }, height: { signal: 'height' } }\n  }, spec.encode);\n\n  encode = scope.add((0, _transforms.Encode)((0, _encodeUtil.encoders)(encode, _marktypes.GroupMark, _roles.FrameRole, spec.style, scope, { pulse: (0, _util.ref)(input) })));\n\n  // Perform view layout\n  parent = scope.add((0, _transforms.ViewLayout)({\n    layout: scope.objectProperty(spec.layout),\n    legendMargin: config.legendMargin,\n    autosize: scope.signalRef('autosize'),\n    mark: root,\n    pulse: (0, _util.ref)(encode)\n  }));\n  scope.operators.pop();\n\n  // Parse remainder of specification\n  scope.pushState((0, _util.ref)(encode), (0, _util.ref)(parent), null);\n  (0, _spec2.default)(spec, scope, true);\n  scope.operators.push(parent);\n\n  // Bound / render / sieve root item\n  op = scope.add((0, _transforms.Bound)({ mark: root, pulse: (0, _util.ref)(parent) }));\n  op = scope.add((0, _transforms.Render)({ pulse: (0, _util.ref)(op) }));\n  op = scope.add((0, _transforms.Sieve)({ pulse: (0, _util.ref)(op) }));\n\n  // Track metadata for root item\n  scope.addData('root', new _DataScope2.default(scope, input, input, op));\n\n  return scope;\n}"},"hash":"31b62bde5e11caa3631a183bff19a9f4","cacheData":{"env":{}}}