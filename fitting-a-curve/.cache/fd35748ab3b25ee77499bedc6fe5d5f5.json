{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"./guides/axis-config","loc":{"line":1,"column":23}},{"name":"./guides/axis-domain","loc":{"line":2,"column":23}},{"name":"./guides/axis-grid","loc":{"line":3,"column":21}},{"name":"./guides/axis-ticks","loc":{"line":4,"column":22}},{"name":"./guides/axis-labels","loc":{"line":5,"column":23}},{"name":"./guides/axis-title","loc":{"line":6,"column":22}},{"name":"./guides/guide-group","loc":{"line":7,"column":23}},{"name":"./marks/roles","loc":{"line":8,"column":23}},{"name":"./mark","loc":{"line":9,"column":22}},{"name":"./encode/encode-util","loc":{"line":10,"column":36}},{"name":"./guides/constants","loc":{"line":11,"column":19}},{"name":"../util","loc":{"line":12,"column":25}},{"name":"../transforms","loc":{"line":13,"column":33}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (spec, scope) {\n  var config = (0, _axisConfig2.default)(spec, scope),\n      encode = spec.encode || {},\n      axisEncode = encode.axis || {},\n      name = axisEncode.name || undefined,\n      interactive = axisEncode.interactive,\n      style = axisEncode.style,\n      datum,\n      dataRef,\n      ticksRef,\n      size,\n      group,\n      children;\n\n  // single-element data source for axis group\n  datum = {\n    orient: spec.orient,\n    ticks: !!(0, _util.value)(spec.ticks, config.ticks),\n    labels: !!(0, _util.value)(spec.labels, config.labels),\n    grid: !!(0, _util.value)(spec.grid, config.grid),\n    domain: !!(0, _util.value)(spec.domain, config.domain),\n    title: !!(0, _util.value)(spec.title, false)\n  };\n  dataRef = (0, _util.ref)(scope.add((0, _transforms.Collect)({}, [datum])));\n\n  // encoding properties for axis group item\n  axisEncode = (0, _encodeUtil.extendEncode)({\n    update: {\n      range: { signal: 'abs(span(range(\"' + spec.scale + '\")))' },\n      offset: (0, _encodeUtil.encoder)((0, _util.value)(spec.offset, 0)),\n      position: (0, _encodeUtil.encoder)((0, _util.value)(spec.position, 0)),\n      titlePadding: (0, _encodeUtil.encoder)((0, _util.value)(spec.titlePadding, config.titlePadding)),\n      minExtent: (0, _encodeUtil.encoder)((0, _util.value)(spec.minExtent, config.minExtent)),\n      maxExtent: (0, _encodeUtil.encoder)((0, _util.value)(spec.maxExtent, config.maxExtent))\n    }\n  }, encode.axis, _constants.Skip);\n\n  // data source for axis ticks\n  ticksRef = (0, _util.ref)(scope.add((0, _transforms.AxisTicks)({\n    scale: scope.scaleRef(spec.scale),\n    extra: config.tickExtra,\n    count: scope.objectProperty(spec.tickCount),\n    values: scope.objectProperty(spec.values),\n    formatSpecifier: scope.property(spec.format)\n  })));\n\n  // generate axis marks\n  children = [];\n\n  // include axis gridlines if requested\n  if (datum.grid) {\n    children.push((0, _axisGrid2.default)(spec, config, encode.grid, ticksRef));\n  }\n\n  // include axis ticks if requested\n  if (datum.ticks) {\n    size = (0, _util.value)(spec.tickSize, config.tickSize);\n    children.push((0, _axisTicks2.default)(spec, config, encode.ticks, ticksRef, size));\n  }\n\n  // include axis labels if requested\n  if (datum.labels) {\n    size = datum.ticks ? size : 0;\n    children.push((0, _axisLabels2.default)(spec, config, encode.labels, ticksRef, size));\n  }\n\n  // include axis domain path if requested\n  if (datum.domain) {\n    children.push((0, _axisDomain2.default)(spec, config, encode.domain, dataRef));\n  }\n\n  // include axis title if defined\n  if (datum.title) {\n    children.push((0, _axisTitle2.default)(spec, config, encode.title, dataRef));\n  }\n\n  // build axis specification\n  group = (0, _guideGroup2.default)(_roles.AxisRole, style, name, dataRef, interactive, axisEncode, children);\n  if (spec.zindex) group.zindex = spec.zindex;\n\n  // parse axis specification\n  return (0, _mark2.default)(group, scope);\n};\n\nvar _axisConfig = require('./guides/axis-config');\n\nvar _axisConfig2 = _interopRequireDefault(_axisConfig);\n\nvar _axisDomain = require('./guides/axis-domain');\n\nvar _axisDomain2 = _interopRequireDefault(_axisDomain);\n\nvar _axisGrid = require('./guides/axis-grid');\n\nvar _axisGrid2 = _interopRequireDefault(_axisGrid);\n\nvar _axisTicks = require('./guides/axis-ticks');\n\nvar _axisTicks2 = _interopRequireDefault(_axisTicks);\n\nvar _axisLabels = require('./guides/axis-labels');\n\nvar _axisLabels2 = _interopRequireDefault(_axisLabels);\n\nvar _axisTitle = require('./guides/axis-title');\n\nvar _axisTitle2 = _interopRequireDefault(_axisTitle);\n\nvar _guideGroup = require('./guides/guide-group');\n\nvar _guideGroup2 = _interopRequireDefault(_guideGroup);\n\nvar _roles = require('./marks/roles');\n\nvar _mark = require('./mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _encodeUtil = require('./encode/encode-util');\n\nvar _constants = require('./guides/constants');\n\nvar _util = require('../util');\n\nvar _transforms = require('../transforms');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"},"hash":"3b7790f1042ad803b9487e2dffe5cd36","cacheData":{"env":{}}}