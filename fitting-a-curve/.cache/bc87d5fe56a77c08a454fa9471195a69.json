{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/d3-time/package.json","includedInParent":true,"mtime":1511300797000},{"name":"./interval","loc":{"line":1,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.milliseconds = undefined;\n\nvar _interval = require(\"./interval\");\n\nvar _interval2 = _interopRequireDefault(_interval);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar millisecond = (0, _interval2.default)(function () {\n  // noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return (0, _interval2.default)(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexports.default = millisecond;\nvar milliseconds = exports.milliseconds = millisecond.range;"},"hash":"32811ff8348dbd1ed604395e1ff53adb","cacheData":{"env":{}}}