{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-transforms/package.json","includedInParent":true,"mtime":1520278057000},{"name":"vega-dataflow","loc":{"line":1,"column":23}},{"name":"vega-util","loc":{"line":2,"column":28}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Key;\n\nvar _vegaDataflow = require('vega-dataflow');\n\nvar _vegaUtil = require('vega-util');\n\n/**\n * Generates a key function.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<string>} params.fields - The field name(s) for the key function.\n * @param {boolean} params.flat - A boolean flag indicating if the field names\n *  should be treated as flat property names, side-stepping nested field\n *  lookups normally indicated by dot or bracket notation.\n */\nfunction Key(params) {\n  _vegaDataflow.Operator.call(this, null, update, params);\n}\n\n(0, _vegaUtil.inherits)(Key, _vegaDataflow.Operator);\n\nfunction update(_) {\n  return this.value && !_.modified() ? this.value : (0, _vegaUtil.key)(_.fields, _.flat);\n}"},"hash":"7d3949cd2f3bf89877d95af76cf76389","cacheData":{"env":{}}}