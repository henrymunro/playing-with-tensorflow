{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-loader/package.json","includedInParent":true,"mtime":1520276803000},{"name":"vega-util","loc":{"line":1,"column":62}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeParsers = undefined;\nexports.inferType = inferType;\nexports.inferTypes = inferTypes;\n\nvar _vegaUtil = require('vega-util');\n\nvar typeParsers = exports.typeParsers = {\n  boolean: _vegaUtil.toBoolean,\n  integer: _vegaUtil.toNumber,\n  number: _vegaUtil.toNumber,\n  date: _vegaUtil.toDate,\n  string: _vegaUtil.toString,\n  unknown: _vegaUtil.identity\n};\n\nvar typeTests = [isBoolean, isInteger, isNumber, isDate];\n\nvar typeList = ['boolean', 'integer', 'number', 'date'];\n\nfunction inferType(values, field) {\n  if (!values || !values.length) return 'unknown';\n\n  var tests = typeTests.slice(),\n      value,\n      i,\n      n,\n      j;\n\n  for (i = 0, n = values.length; i < n; ++i) {\n    value = field ? values[i][field] : values[i];\n    for (j = 0; j < tests.length; ++j) {\n      if (isValid(value) && !tests[j](value)) {\n        tests.splice(j, 1);--j;\n      }\n    }\n    if (tests.length === 0) return 'string';\n  }\n  return typeList[typeTests.indexOf(tests[0])];\n}\n\nfunction inferTypes(data, fields) {\n  return fields.reduce(function (types, field) {\n    types[field] = inferType(data, field);\n    return types;\n  }, {});\n}\n\n// -- Type Checks ----\n\nfunction isValid(_) {\n  return _ != null && _ === _;\n}\n\nfunction isBoolean(_) {\n  return _ === 'true' || _ === 'false' || _ === true || _ === false;\n}\n\nfunction isDate(_) {\n  return !isNaN(Date.parse(_));\n}\n\nfunction isNumber(_) {\n  return !isNaN(+_) && !(_ instanceof Date);\n}\n\nfunction isInteger(_) {\n  return isNumber(_) && (_ = +_) === ~~_;\n}"},"hash":"60e8105afaebc25122831ac74c974c04","cacheData":{"env":{}}}