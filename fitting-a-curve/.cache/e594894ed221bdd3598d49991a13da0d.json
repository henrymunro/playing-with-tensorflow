{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-transforms/package.json","includedInParent":true,"mtime":1520278057000},{"name":"vega-dataflow","loc":{"line":1,"column":51}},{"name":"vega-util","loc":{"line":2,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Relay;\n\nvar _vegaDataflow = require('vega-dataflow');\n\nvar _vegaUtil = require('vega-util');\n\n/**\n * Relays a data stream between data processing pipelines.\n * If the derive parameter is set, this transform will create derived\n * copies of observed tuples. This provides derived data streams in which\n * modifications to the tuples do not pollute an upstream data source.\n * @param {object} params - The parameters for this operator.\n * @param {number} [params.derive=false] - Boolean flag indicating if\n *   the transform should make derived copies of incoming tuples.\n * @constructor\n */\nfunction Relay(params) {\n  _vegaDataflow.Transform.call(this, null, params);\n}\n\nvar prototype = (0, _vegaUtil.inherits)(Relay, _vegaDataflow.Transform);\n\nprototype.transform = function (_, pulse) {\n  var out, lut;\n\n  if (this.value) {\n    lut = this.value;\n  } else {\n    out = pulse = pulse.addAll();\n    lut = this.value = {};\n  }\n\n  if (_.derive) {\n    out = pulse.fork(pulse.NO_SOURCE);\n\n    pulse.visit(pulse.REM, function (t) {\n      var id = (0, _vegaDataflow.tupleid)(t);\n      out.rem.push(lut[id]);\n      lut[id] = null;\n    });\n\n    pulse.visit(pulse.ADD, function (t) {\n      var dt = (0, _vegaDataflow.derive)(t);\n      lut[(0, _vegaDataflow.tupleid)(t)] = dt;\n      out.add.push(dt);\n    });\n\n    pulse.visit(pulse.MOD, function (t) {\n      out.mod.push((0, _vegaDataflow.rederive)(t, lut[(0, _vegaDataflow.tupleid)(t)]));\n    });\n  }\n\n  return out;\n};"},"hash":"5551e3bffe58fe9f2bf8d82182f4190c","cacheData":{"env":{}}}