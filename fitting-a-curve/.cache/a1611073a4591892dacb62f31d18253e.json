{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/d3-scale/package.json","includedInParent":true,"mtime":1517166165000},{"name":"d3-collection","loc":{"line":1,"column":18}},{"name":"./array","loc":{"line":2,"column":20}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.implicit = undefined;\nexports.default = ordinal;\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _array = require(\"./array\");\n\nvar implicit = exports.implicit = { name: \"implicit\" };\n\nfunction ordinal(range) {\n  var index = (0, _d3Collection.map)(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : _array.slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\",\n        i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = (0, _d3Collection.map)();\n    var i = -1,\n        n = _.length,\n        d,\n        key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = _array.slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return ordinal().domain(domain).range(range).unknown(unknown);\n  };\n\n  return scale;\n}"},"hash":"3212bf9ac6d2f4011b251bed96075971","cacheData":{"env":{}}}