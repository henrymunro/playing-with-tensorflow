{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-lib/package.json","includedInParent":true,"mtime":1520360247000},{"name":"vega-util","loc":{"line":25,"column":14}},{"name":"vega-dataflow","loc":{"line":46,"column":7}},{"name":"vega-transforms","loc":{"line":5,"column":20}},{"name":"vega-view-transforms","loc":{"line":6,"column":21}},{"name":"vega-encode","loc":{"line":7,"column":24}},{"name":"vega-geo","loc":{"line":8,"column":21}},{"name":"vega-force","loc":{"line":9,"column":23}},{"name":"vega-hierarchy","loc":{"line":10,"column":22}},{"name":"vega-voronoi","loc":{"line":11,"column":25}},{"name":"vega-wordcloud","loc":{"line":12,"column":27}},{"name":"vega-crossfilter","loc":{"line":13,"column":20}},{"name":"./package.json","loc":{"line":21,"column":7}},{"name":"vega-statistics","loc":{"line":23,"column":14}},{"name":"vega-loader","loc":{"line":27,"column":14}},{"name":"vega-scenegraph","loc":{"line":29,"column":14}},{"name":"vega-scale","loc":{"line":55,"column":7}},{"name":"vega-projection","loc":{"line":59,"column":7}},{"name":"vega-view","loc":{"line":63,"column":7}},{"name":"vega-parser","loc":{"line":70,"column":7}},{"name":"vega-runtime","loc":{"line":75,"column":7}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runtimeContext = exports.runtime = exports.timeFormatLocale = exports.formatLocale = exports.expressionFunction = exports.parse = exports.View = exports.projection = exports.utcInterval = exports.timeInterval = exports.interpolateRange = exports.interpolate = exports.scheme = exports.scale = exports.tupleid = exports.transforms = exports.transform = exports.definition = exports.isTuple = exports.ingest = exports.changeset = exports.Transform = exports.Operator = exports.MultiPulse = exports.Pulse = exports.Parameters = exports.EventStream = exports.Dataflow = exports.version = undefined;\n\nvar _package = require('./package.json');\n\nObject.defineProperty(exports, 'version', {\n  enumerable: true,\n  get: function () {\n    return _package.version;\n  }\n});\n\nvar _vegaStatistics = require('vega-statistics');\n\nObject.keys(_vegaStatistics).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _vegaStatistics[key];\n    }\n  });\n});\n\nvar _vegaUtil = require('vega-util');\n\nObject.keys(_vegaUtil).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _vegaUtil[key];\n    }\n  });\n});\n\nvar _vegaLoader = require('vega-loader');\n\nObject.keys(_vegaLoader).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _vegaLoader[key];\n    }\n  });\n});\n\nvar _vegaScenegraph = require('vega-scenegraph');\n\nObject.keys(_vegaScenegraph).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _vegaScenegraph[key];\n    }\n  });\n});\n\nvar _vegaDataflow = require('vega-dataflow');\n\nObject.defineProperty(exports, 'Dataflow', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.Dataflow;\n  }\n});\nObject.defineProperty(exports, 'EventStream', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.EventStream;\n  }\n});\nObject.defineProperty(exports, 'Parameters', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.Parameters;\n  }\n});\nObject.defineProperty(exports, 'Pulse', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.Pulse;\n  }\n});\nObject.defineProperty(exports, 'MultiPulse', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.MultiPulse;\n  }\n});\nObject.defineProperty(exports, 'Operator', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.Operator;\n  }\n});\nObject.defineProperty(exports, 'Transform', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.Transform;\n  }\n});\nObject.defineProperty(exports, 'changeset', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.changeset;\n  }\n});\nObject.defineProperty(exports, 'ingest', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.ingest;\n  }\n});\nObject.defineProperty(exports, 'isTuple', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.isTuple;\n  }\n});\nObject.defineProperty(exports, 'definition', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.definition;\n  }\n});\nObject.defineProperty(exports, 'transform', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.transform;\n  }\n});\nObject.defineProperty(exports, 'transforms', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.transforms;\n  }\n});\nObject.defineProperty(exports, 'tupleid', {\n  enumerable: true,\n  get: function () {\n    return _vegaDataflow.tupleid;\n  }\n});\n\nvar _vegaScale = require('vega-scale');\n\nObject.defineProperty(exports, 'scale', {\n  enumerable: true,\n  get: function () {\n    return _vegaScale.scale;\n  }\n});\nObject.defineProperty(exports, 'scheme', {\n  enumerable: true,\n  get: function () {\n    return _vegaScale.scheme;\n  }\n});\nObject.defineProperty(exports, 'interpolate', {\n  enumerable: true,\n  get: function () {\n    return _vegaScale.interpolate;\n  }\n});\nObject.defineProperty(exports, 'interpolateRange', {\n  enumerable: true,\n  get: function () {\n    return _vegaScale.interpolateRange;\n  }\n});\nObject.defineProperty(exports, 'timeInterval', {\n  enumerable: true,\n  get: function () {\n    return _vegaScale.timeInterval;\n  }\n});\nObject.defineProperty(exports, 'utcInterval', {\n  enumerable: true,\n  get: function () {\n    return _vegaScale.utcInterval;\n  }\n});\n\nvar _vegaProjection = require('vega-projection');\n\nObject.defineProperty(exports, 'projection', {\n  enumerable: true,\n  get: function () {\n    return _vegaProjection.projection;\n  }\n});\n\nvar _vegaView = require('vega-view');\n\nObject.defineProperty(exports, 'View', {\n  enumerable: true,\n  get: function () {\n    return _vegaView.View;\n  }\n});\n\nvar _vegaParser = require('vega-parser');\n\nObject.defineProperty(exports, 'parse', {\n  enumerable: true,\n  get: function () {\n    return _vegaParser.parse;\n  }\n});\nObject.defineProperty(exports, 'expressionFunction', {\n  enumerable: true,\n  get: function () {\n    return _vegaParser.expressionFunction;\n  }\n});\nObject.defineProperty(exports, 'formatLocale', {\n  enumerable: true,\n  get: function () {\n    return _vegaParser.formatLocale;\n  }\n});\nObject.defineProperty(exports, 'timeFormatLocale', {\n  enumerable: true,\n  get: function () {\n    return _vegaParser.timeFormatLocale;\n  }\n});\n\nvar _vegaRuntime = require('vega-runtime');\n\nObject.defineProperty(exports, 'runtime', {\n  enumerable: true,\n  get: function () {\n    return _vegaRuntime.parse;\n  }\n});\nObject.defineProperty(exports, 'runtimeContext', {\n  enumerable: true,\n  get: function () {\n    return _vegaRuntime.context;\n  }\n});\n\nvar _vegaTransforms = require('vega-transforms');\n\nvar tx = _interopRequireWildcard(_vegaTransforms);\n\nvar _vegaViewTransforms = require('vega-view-transforms');\n\nvar vtx = _interopRequireWildcard(_vegaViewTransforms);\n\nvar _vegaEncode = require('vega-encode');\n\nvar encode = _interopRequireWildcard(_vegaEncode);\n\nvar _vegaGeo = require('vega-geo');\n\nvar geo = _interopRequireWildcard(_vegaGeo);\n\nvar _vegaForce = require('vega-force');\n\nvar force = _interopRequireWildcard(_vegaForce);\n\nvar _vegaHierarchy = require('vega-hierarchy');\n\nvar tree = _interopRequireWildcard(_vegaHierarchy);\n\nvar _vegaVoronoi = require('vega-voronoi');\n\nvar voronoi = _interopRequireWildcard(_vegaVoronoi);\n\nvar _vegaWordcloud = require('vega-wordcloud');\n\nvar wordcloud = _interopRequireWildcard(_vegaWordcloud);\n\nvar _vegaCrossfilter = require('vega-crossfilter');\n\nvar xf = _interopRequireWildcard(_vegaCrossfilter);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n(0, _vegaUtil.extend)(_vegaDataflow.transforms, tx, vtx, encode, geo, force, tree, voronoi, wordcloud, xf);\n\n// -- Exports -----\n\n// -- Transforms -----"},"hash":"7b0482857665567bc71c481f0a148dfd","cacheData":{"env":{}}}