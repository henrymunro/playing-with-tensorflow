{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-transforms/package.json","includedInParent":true,"mtime":1520278057000},{"name":"vega-statistics","loc":{"line":6,"column":7}},{"name":"vega-util","loc":{"line":8,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parse;\n\nvar _vegaStatistics = require('vega-statistics');\n\nvar _vegaUtil = require('vega-util');\n\nvar Distributions = {\n  kde: _vegaStatistics.randomKDE,\n  mixture: _vegaStatistics.randomMixture,\n  normal: _vegaStatistics.randomNormal,\n  uniform: _vegaStatistics.randomUniform\n};\n\nvar DISTRIBUTIONS = 'distributions',\n    FUNCTION = 'function',\n    FIELD = 'field';\n\n/**\n * Parse a parameter object for a probability distribution.\n * @param {object} def - The distribution parameter object.\n * @param {function():Array<object>} - A method for requesting\n *   source data. Used for distributions (such as KDE) that\n *   require sample data points. This method will only be\n *   invoked if the 'from' parameter for a target data source\n *   is not provided. Typically this method returns backing\n *   source data for a Pulse object.\n * @return {object} - The output distribution object.\n */\nfunction parse(def, data) {\n  var func = def[FUNCTION];\n  if (!Distributions.hasOwnProperty(func)) {\n    (0, _vegaUtil.error)('Unknown distribution function: ' + func);\n  }\n\n  var d = Distributions[func]();\n\n  for (var name in def) {\n    // if data field, extract values\n    if (name === FIELD) {\n      d.data((def.from || data()).map(def[name]));\n    }\n\n    // if distribution mixture, recurse to parse each definition\n    else if (name === DISTRIBUTIONS) {\n        d[name](def[name].map(function (_) {\n          return parse(_, data);\n        }));\n      }\n\n      // otherwise, simply set the parameter\n      else if (typeof d[name] === FUNCTION) {\n          d[name](def[name]);\n        }\n  }\n\n  return d;\n}"},"hash":"3afb5d52064c0d56427feb19b2a86d2b","cacheData":{"env":{}}}