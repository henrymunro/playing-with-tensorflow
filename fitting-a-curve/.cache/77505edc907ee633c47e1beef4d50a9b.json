{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-scale/package.json","includedInParent":true,"mtime":1517882812000},{"name":"vega-util","loc":{"line":1,"column":29}},{"name":"d3-interpolate","loc":{"line":2,"column":19}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interpolateRange = interpolateRange;\nexports.scaleFraction = scaleFraction;\nexports.interpolate = interpolate;\n\nvar _vegaUtil = require('vega-util');\n\nvar _d3Interpolate = require('d3-interpolate');\n\nvar $ = _interopRequireWildcard(_d3Interpolate);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction interpolateRange(interpolator, range) {\n  var start = range[0],\n      span = (0, _vegaUtil.peek)(range) - start;\n  return function (i) {\n    return interpolator(start + i * span);\n  };\n}\n\nfunction scaleFraction(scale, min, max) {\n  var delta = max - min;\n  return !delta ? (0, _vegaUtil.constant)(0) : scale.type === 'linear' || scale.type === 'sequential' ? function (_) {\n    return (_ - min) / delta;\n  } : scale.copy().domain([min, max]).range([0, 1]).interpolate(lerp);\n}\n\nfunction lerp(a, b) {\n  var span = b - a;\n  return function (i) {\n    return a + i * span;\n  };\n}\n\nfunction interpolate(type, gamma) {\n  var interp = $[method(type)];\n  return gamma != null && interp && interp.gamma ? interp.gamma(gamma) : interp;\n}\n\nfunction method(type) {\n  return 'interpolate' + type.toLowerCase().split('-').map(function (s) {\n    return s[0].toUpperCase() + s.slice(1);\n  }).join('');\n}"},"hash":"cd74e6887e3c3a96f20acca7812b792f","cacheData":{"env":{}}}