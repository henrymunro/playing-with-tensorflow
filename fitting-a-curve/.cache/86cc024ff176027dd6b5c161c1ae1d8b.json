{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-scenegraph/package.json","includedInParent":true,"mtime":1518728314000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = context;\nvar bounds,\n    tau = Math.PI * 2,\n    halfPi = tau / 4,\n    circleThreshold = tau - 1e-8;\n\nfunction context(_) {\n  bounds = _;\n  return context;\n}\n\nfunction noop() {}\n\nfunction add(x, y) {\n  bounds.add(x, y);\n}\n\ncontext.beginPath = noop;\n\ncontext.closePath = noop;\n\ncontext.moveTo = add;\n\ncontext.lineTo = add;\n\ncontext.rect = function (x, y, w, h) {\n  add(x, y);\n  add(x + w, y + h);\n};\n\ncontext.quadraticCurveTo = function (x1, y1, x2, y2) {\n  add(x1, y1);\n  add(x2, y2);\n};\n\ncontext.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n  add(x1, y1);\n  add(x2, y2);\n  add(x3, y3);\n};\n\ncontext.arc = function (cx, cy, r, sa, ea, ccw) {\n  if (Math.abs(ea - sa) > circleThreshold) {\n    add(cx - r, cy - r);\n    add(cx + r, cy + r);\n    return;\n  }\n\n  var xmin = Infinity,\n      xmax = -Infinity,\n      ymin = Infinity,\n      ymax = -Infinity,\n      s,\n      i,\n      x,\n      y;\n\n  function update(a) {\n    x = r * Math.cos(a);\n    y = r * Math.sin(a);\n    if (x < xmin) xmin = x;\n    if (x > xmax) xmax = x;\n    if (y < ymin) ymin = y;\n    if (y > ymax) ymax = y;\n  }\n\n  // Sample end points and interior points aligned with 90 degrees\n  update(sa);\n  update(ea);\n\n  if (ea !== sa) {\n    sa = sa % tau;if (sa < 0) sa += tau;\n    ea = ea % tau;if (ea < 0) ea += tau;\n\n    if (ea < sa) {\n      ccw = !ccw; // flip direction\n      s = sa;sa = ea;ea = s; // swap end-points\n    }\n\n    if (ccw) {\n      ea -= tau;\n      s = sa - sa % halfPi;\n      for (i = 0; i < 4 && s > ea; ++i, s -= halfPi) update(s);\n    } else {\n      s = sa - sa % halfPi + halfPi;\n      for (i = 0; i < 4 && s < ea; ++i, s = s + halfPi) update(s);\n    }\n  }\n\n  add(cx + xmin, cy + ymin);\n  add(cx + xmax, cy + ymax);\n};"},"hash":"e9a210051f76303c563c6b59b1bd0194","cacheData":{"env":{}}}