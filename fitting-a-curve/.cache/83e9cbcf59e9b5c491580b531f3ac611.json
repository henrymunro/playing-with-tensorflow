{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/vega-parser/package.json","includedInParent":true,"mtime":1520359126000},{"name":"vega-util","loc":{"line":1,"column":52}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (proj, scope) {\n  var params = {};\n\n  for (var name in proj) {\n    if (name === 'name') continue;\n    params[name] = parseParameter(proj[name], name, scope);\n  }\n\n  scope.addProjection(proj.name, params);\n};\n\nvar _vegaUtil = require('vega-util');\n\nfunction parseParameter(_, name, scope) {\n  return (0, _vegaUtil.isArray)(_) ? _.map(function (_) {\n    return parseParameter(_, name, scope);\n  }) : !(0, _vegaUtil.isObject)(_) ? _ : _.signal ? scope.signalRef(_.signal) : name === 'fit' ? _ : (0, _vegaUtil.error)('Unsupported parameter object: ' + (0, _vegaUtil.stringValue)(_));\n}"},"hash":"137620aebd2687321dc7d64d96bf56d2","cacheData":{"env":{}}}