{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/node_modules/d3-geo/package.json","includedInParent":true,"mtime":1521047798000},{"name":"../math","loc":{"line":1,"column":35}},{"name":"./index","loc":{"line":2,"column":32}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.conicProjection = conicProjection;\n\nvar _math = require(\"../math\");\n\nvar _index = require(\"./index\");\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = _math.pi / 3,\n      m = (0, _index.projectionMutator)(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function (_) {\n    return arguments.length ? m(phi0 = _[0] * _math.radians, phi1 = _[1] * _math.radians) : [phi0 * _math.degrees, phi1 * _math.degrees];\n  };\n\n  return p;\n}"},"hash":"31275e8c65a5a3e95113a9907490d92e","cacheData":{"env":{}}}