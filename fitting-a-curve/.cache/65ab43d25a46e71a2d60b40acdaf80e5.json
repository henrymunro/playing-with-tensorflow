{"dependencies":[{"name":"/Users/senecamac1/henry/playing-with-tensorflow/fitting-a-curve/package.json","includedInParent":true,"mtime":1522495589000},{"name":"@tensorflow/tfjs","loc":{"line":18,"column":20}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateData = generateData;\n\nvar _tfjs = require(\"@tensorflow/tfjs\");\n\nvar tf = _interopRequireWildcard(_tfjs);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction generateData(numPoints, coeff) {\n  var sigma = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.04;\n\n  return tf.tidy(function () {\n    var _ref = [tf.scalar(coeff.a), tf.scalar(coeff.b), tf.scalar(coeff.c), tf.scalar(coeff.d)],\n        a = _ref[0],\n        b = _ref[1],\n        c = _ref[2],\n        d = _ref[3];\n\n\n    var xs = tf.randomUniform([numPoints], -1, 1);\n\n    // Generate polynomial data\n    var three = tf.scalar(3, \"int32\");\n    var ys = a.mul(xs.pow(three)).add(b.mul(xs.square())).add(c.mul(xs)).add(d)\n    // Add random noise to the generated data\n    // to make the problem a bit more interesting\n    .add(tf.randomNormal([numPoints], 0, sigma));\n\n    // Normalize the y values to the range 0 to 1.\n    var ymin = ys.min();\n    var ymax = ys.max();\n    var yrange = ymax.sub(ymin);\n    var ysNormalized = ys.sub(ymin).div(yrange);\n\n    return {\n      xs: xs,\n      ys: ysNormalized\n    };\n  });\n} /**\n   * @license\n   * Copyright 2018 Google LLC. All Rights Reserved.\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   * =============================================================================\n   */"},"hash":"fcfb6ecad4e1f1a3693ea8914b5240d3","cacheData":{"env":{}}}